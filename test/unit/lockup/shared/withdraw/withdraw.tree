withdraw.t.sol
├── when the call is a delegate call
│  └── it should revert
└── when the call is not a delegate call
    ├── when the stream is null
    │  └── it should revert
    ├── when the stream is depleted
    │  └── it should revert
    └── when the stream is neither null nor depleted
       ├── when the caller is unauthorized
       │  ├── when the caller is a malicious third party
       │  │  └── it should revert
       │  ├── when the caller is the sender
       │  │  └── it should revert
       │  └── when the caller is a former recipient
       │     └── it should revert
       └── when the caller is authorized
          ├── when the provided address is zero
          │  └── it should revert
          └── when the provided address is not zero
             ├── when the withdraw amount is zero
             │  └── it should revert
             └── when the withdraw amount is not zero
                ├── when the amount is greater than the withdrawable amount
                │  └── it should revert
                └── when the amount is not greater than the withdrawable amount
                   ├── when the caller is the recipient
                   │  ├── it should make the withdrawal
                   │  └── it should update the withdrawn amount
                   ├── when the caller is an approved third party
                   │  ├── it should make the withdrawal
                   │  └── it should update the withdrawn amount
                   └── when the caller is the sender
                      ├── when the end time is in the present
                      │  ├── it should make the withdrawal
                      │  ├── it should mark the stream as depleted
                      │  └── it should make the stream non-cancelable
                      └── when the end time is in the future
                         ├── when the recipient is not a contract
                         │  └── it should make the withdrawal
                         │  └── it should update the withdrawn amount
                         └── when the recipient is a contract
                            ├── when the recipient does not implement the hook
                            │  ├── it should make the withdrawal
                            │  ├── it should update the withdrawn amount
                            │  ├── it should call the recipient hook
                            │  └── it should ignore the revert
                            └── when the recipient implements the hook
                               ├── when the recipient reverts
                               │  ├── it should make the withdrawal
                               │  ├── it should update the withdrawn amount
                               │  ├── it should call the recipient hook
                               │  └── it should ignore the revert
                               └── when the recipient does not revert
                                  ├── when there is reentrancy
                                  │  ├── it should make multiple withdrawals
                                  │  ├── it should update the withdrawn amounts
                                  │  └── it should call the recipient hook
                                  └── when there is no reentrancy
                                     ├── when the stream is canceled
                                     │  ├── it should make the withdrawal
                                     │  ├── it should mark the stream as depleted
                                     │  ├── it should update the withdrawn amount
                                     │  ├── it should call the recipient hook
                                     │  └── it should emit a {WithdrawFromLockupStream} event
                                     └── when the stream is active
                                        ├── it should make the withdrawal
                                        ├── it should update the withdrawn amount
                                        ├── it should call the recipient hook
                                        └── it should emit a {WithdrawFromLockupStream} event
